{"name": "test_hello", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=109.0.5414.119)\nStacktrace:\n0   chromedriver                        0x00000001012f50d8 chromedriver + 4886744\n1   chromedriver                        0x0000000101274993 chromedriver + 4360595\n2   chromedriver                        0x0000000100ebf8c7 chromedriver + 473287\n3   chromedriver                        0x0000000100e95ff5 chromedriver + 303093\n4   chromedriver                        0x0000000100f2ec9f chromedriver + 928927\n5   chromedriver                        0x0000000100f448e3 chromedriver + 1018083\n6   chromedriver                        0x0000000100f2a073 chromedriver + 909427\n7   chromedriver                        0x0000000100ef447c chromedriver + 689276\n8   chromedriver                        0x0000000100ef59fe chromedriver + 694782\n9   chromedriver                        0x00000001012c24be chromedriver + 4678846\n10  chromedriver                        0x00000001012c6f79 chromedriver + 4697977\n11  chromedriver                        0x00000001012ce6fe chromedriver + 4728574\n12  chromedriver                        0x00000001012c7d7a chromedriver + 4701562\n13  chromedriver                        0x000000010129bca2 chromedriver + 4521122\n14  chromedriver                        0x00000001012e6e68 chromedriver + 4828776\n15  chromedriver                        0x00000001012e6fe5 chromedriver + 4829157\n16  chromedriver                        0x00000001012fc9ff chromedriver + 4917759\n17  libsystem_pthread.dylib             0x00007ff803f314e1 _pthread_start + 125\n18  libsystem_pthread.dylib             0x00007ff803f2cf6b thread_start + 15", "trace": "self = <tests.web.test_first.Tests object at 0x106961d80>\n\n    @allure.step(\"test\")\n    def test_hello(self):\n        self.driver.get(self.base_url)\n        home_pages = FtHomePage(self.driver)\n>       subscribe_page = home_pages.click_on_subscribe_button()\n\ntests/web/test_first.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/home_page.py:15: in click_on_subscribe_button\n    return SubscribePage(self.driver)\npages/subscribe_page.py:11: in __init__\n    self.weekend_page = driver.find_element(By.XPATH, self.weekend_page)\n../../.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:830: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n../../.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1069613f0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...ff803f314e1 _pthread_start + 125\\\\n18  libsystem_pthread.dylib             0x00007ff803f2cf6b thread_start + 15\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=109.0.5414.119)\nE       Stacktrace:\nE       0   chromedriver                        0x00000001012f50d8 chromedriver + 4886744\nE       1   chromedriver                        0x0000000101274993 chromedriver + 4360595\nE       2   chromedriver                        0x0000000100ebf8c7 chromedriver + 473287\nE       3   chromedriver                        0x0000000100e95ff5 chromedriver + 303093\nE       4   chromedriver                        0x0000000100f2ec9f chromedriver + 928927\nE       5   chromedriver                        0x0000000100f448e3 chromedriver + 1018083\nE       6   chromedriver                        0x0000000100f2a073 chromedriver + 909427\nE       7   chromedriver                        0x0000000100ef447c chromedriver + 689276\nE       8   chromedriver                        0x0000000100ef59fe chromedriver + 694782\nE       9   chromedriver                        0x00000001012c24be chromedriver + 4678846\nE       10  chromedriver                        0x00000001012c6f79 chromedriver + 4697977\nE       11  chromedriver                        0x00000001012ce6fe chromedriver + 4728574\nE       12  chromedriver                        0x00000001012c7d7a chromedriver + 4701562\nE       13  chromedriver                        0x000000010129bca2 chromedriver + 4521122\nE       14  chromedriver                        0x00000001012e6e68 chromedriver + 4828776\nE       15  chromedriver                        0x00000001012e6fe5 chromedriver + 4829157\nE       16  chromedriver                        0x00000001012fc9ff chromedriver + 4917759\nE       17  libsystem_pthread.dylib             0x00007ff803f314e1 _pthread_start + 125\nE       18  libsystem_pthread.dylib             0x00007ff803f2cf6b thread_start + 15\n\n../../.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchWindowException"}, "steps": [{"name": "test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=109.0.5414.119)\nStacktrace:\n0   chromedriver                        0x00000001012f50d8 chromedriver + 4886744\n1   chromedriver                        0x0000000101274993 chromedriver + 4360595\n2   chromedriver                        0x0000000100ebf8c7 chromedriver + 473287\n3   chromedriver                        0x0000000100e95ff5 chromedriver + 303093\n4   chromedriver                        0x0000000100f2ec9f chromedriver + 928927\n5   chromedriver                        0x0000000100f448e3 chromedriver + 1018083\n6   chromedriver                        0x0000000100f2a073 chromedriver + 909427\n7   chromedriver                        0x0000000100ef447c chromedriver + 689276\n8   chromedriver                        0x0000000100ef59fe chromedriver + 694782\n9   chromedriver                        0x00000001012c24be chromedriver + 4678846\n10  chromedriver                        0x00000001012c6f79 chromedriver + 4697977\n11  chromedriver                        0x00000001012ce6fe chromedriver + 4728574\n12  chromedriver                        0x00000001012c7d7a chromedriver + 4701562\n13  chromedriver                        0x000000010129bca2 chromedriver + 4521122\n14  chromedriver                        0x00000001012e6e68 chromedriver + 4828776\n15  chromedriver                        0x00000001012e6fe5 chromedriver + 4829157\n16  chromedriver                        0x00000001012fc9ff chromedriver + 4917759\n17  libsystem_pthread.dylib             0x00007ff803f314e1 _pthread_start + 125\n18  libsystem_pthread.dylib             0x00007ff803f2cf6b thread_start + 15\n\n", "trace": "  File \"/Users/deyan/.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/Users/deyan/Documents/python-atf/tests/web/test_first.py\", line 16, in test_hello\n    subscribe_page = home_pages.click_on_subscribe_button()\n  File \"/Users/deyan/Documents/python-atf/pages/home_page.py\", line 15, in click_on_subscribe_button\n    return SubscribePage(self.driver)\n  File \"/Users/deyan/Documents/python-atf/pages/subscribe_page.py\", line 11, in __init__\n    self.weekend_page = driver.find_element(By.XPATH, self.weekend_page)\n  File \"/Users/deyan/.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 830, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"/Users/deyan/.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/deyan/.local/share/virtualenvs/python-atf-96O-t3M1/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1675159067808, "stop": 1675159079252}], "start": 1675159067808, "stop": 1675159079257, "uuid": "00551810-59f1-4738-a7d2-8fd803df6e8c", "historyId": "eeac07352ddb38650d686afc067df07a", "testCaseId": "79f0ba153a5404f772b8b2afc0da5e7c", "fullName": "tests.web.test_first.Tests#test_hello", "labels": [{"name": "parentSuite", "value": "tests.web"}, {"name": "suite", "value": "test_first"}, {"name": "subSuite", "value": "Tests"}, {"name": "host", "value": "Deyans-MacBook-Air.local"}, {"name": "thread", "value": "18785-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.web.test_first"}]}